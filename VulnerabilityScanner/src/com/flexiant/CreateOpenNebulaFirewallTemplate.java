package com.flexiant;

import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Level;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.opennebula.client.Client;
import org.opennebula.client.OneResponse;
import org.opennebula.client.secgroup.SecurityGroup;
import org.opennebula.client.vm.VirtualMachine;

public class CreateOpenNebulaFirewallTemplate {
	
	private static Logger LOGGER = LogManager.getLogger(CreateFCOFirewallTemplate.class);

	/*
	 * Open Nebula does not support adding new security groups to VMs which have
	 * already been created. So the only way to apply the security group
	 * firewall is to edit a security group that has been applied to the VM.
	 */
	public void editSecurityGroup(String UUID,String emailAddress) {

		Client oneClient;
		//Create auth variables from username and password
		String auth = Globals.OpenNebulaCloudUsernameCredential + ":" + Globals.OpenNebulaCloudPasswordCredential;
		LOGGER.log(Level.INFO, "OpenNebula Auth variable: " + auth);
		LOGGER.info("Open Nebula VM UUID: " + UUID);

		try {

			LOGGER.info("inside try");
			String secGroup = "NAME = testGroup\n" + "RULE = [PROTOCOL = TCP, RULE_TYPE = inbound, RANGE = 1000:2000]";
			oneClient = new Client(auth, Globals.OpenNebulaEndpoint);
			LOGGER.info("Client created");

			OneResponse rc2 = VirtualMachine.info(oneClient, Integer.parseInt(UUID));

			int securityGroupID = getSecurityGroupID(rc2.getMessage());
			LOGGER.log(Level.INFO, "Open Nebula Security Group ID: " + securityGroupID);

			if (securityGroupID != 0) {
				OneResponse rc3 = SecurityGroup.update(oneClient, securityGroupID, secGroup, false);
				System.out.println(rc3.getMessage());
			}

		} catch (Exception e) {
			LOGGER.info("exception");
			LOGGER.error(e.getMessage());
		}
	}

	//Method used to extract security group information from the VM info string
	private int getSecurityGroupID(String responseMsg) {

		if (!responseMsg.equals("null")) {

			String delim1 = "</NIC_ID><SECURITY_GROUPS><![CDATA[";
			String delim2 = "]]>";
			String securityGroupID = "";

			String content = StringUtils.substringBetween(responseMsg, delim1, delim2);
			String[] tokens = content.split(",");
			LOGGER.info("Security Group IDs: ");

			for (int i = 0; i < tokens.length; i++) {
				String current = tokens[i];
				System.out.println(current);
				if (!current.equals("0"))
				securityGroupID = current;
			}

			return Integer.parseInt(securityGroupID);
		} else
			return 0;
	}

}
